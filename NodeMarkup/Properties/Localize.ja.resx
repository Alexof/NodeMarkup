<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Editor_DeleteCaption" xml:space="preserve">
    <value>{0} を削除しますか？</value>
  </data>
  <data name="Editor_DeleteMessage" xml:space="preserve">
    <value>{0} - {1} を削除してもよろしいですか?
この操作は、元に戻せません</value>
  </data>
  <data name="FieldPanel_ScrollWheel" xml:space="preserve">
    <value>ホイールをスクロールして変更</value>
  </data>
  <data name="HeaderPanel_ApplyTemplate" xml:space="preserve">
    <value>テンプレートを適用</value>
  </data>
  <data name="HeaderPanel_SaveAsTemplate" xml:space="preserve">
    <value>テンプレートの保存</value>
  </data>
  <data name="HeaderPanel_SetAsDefault" xml:space="preserve">
    <value>デフォルトに設定</value>
  </data>
  <data name="HeaderPanel_UnsetAsDefault" xml:space="preserve">
    <value>デフォルトの解除</value>
  </data>
  <data name="LineEditor_AddRuleButton" xml:space="preserve">
    <value>ルールを追加</value>
  </data>
  <data name="LineEditor_Color" xml:space="preserve">
    <value>カラー</value>
  </data>
  <data name="LineEditor_DashedLength" xml:space="preserve">
    <value>線の長さ</value>
  </data>
  <data name="LineEditor_DeleteRuleCaption" xml:space="preserve">
    <value>ルールを削除</value>
  </data>
  <data name="LineEditor_DeleteRuleMessage" xml:space="preserve">
    <value>このルールを削除してもよろしいですか?
この操作は元に戻せません</value>
  </data>
  <data name="LineEditor_From" xml:space="preserve">
    <value>開始点</value>
  </data>
  <data name="LineEditor_InfoSelectFrom" xml:space="preserve">
    <value>線の開始ポイントを選択</value>
  </data>
  <data name="LineEditor_InfoSelectTo" xml:space="preserve">
    <value>線の終了ポイントを選択</value>
  </data>
  <data name="LineEditor_ItemDescription" xml:space="preserve">
    <value>ライン</value>
  </data>
  <data name="LineEditor_Lines" xml:space="preserve">
    <value>ライン</value>
  </data>
  <data name="LineEditor_Offset" xml:space="preserve">
    <value>オフセット</value>
  </data>
  <data name="LineEditor_SpaceLength" xml:space="preserve">
    <value>空白の長さ</value>
  </data>
  <data name="LineEditor_Style" xml:space="preserve">
    <value>線の種類</value>
  </data>
  
  
  
  <data name="LineStyle_Dashed" xml:space="preserve">
    <value>破線</value>
  </data>
  
  <data name="LineStyle_DoubleDashed" xml:space="preserve">
    <value>二重破線</value>
  </data>
  
  <data name="LineStyle_DoubleSolid" xml:space="preserve">
    <value>2重線</value>
  </data>
  
  <data name="LineStyle_Solid" xml:space="preserve">
    <value>実線</value>
  </data>
  
  <data name="MessageBox_No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="MessageBox_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="MessageBox_Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  
  <data name="Mod_DescriptionBeta" xml:space="preserve">
    <value>これはβ版で、エラーが発生する可能性があります。安定性は保証されていません！</value>
  </data>
  <data name="Panel_Caption" xml:space="preserve">
    <value>#{0} のノードを編集します</value>
  </data>
  <data name="PointEditor_ItemDescription" xml:space="preserve">
    <value>ポイント</value>
  </data>
  <data name="PointEditor_Offset" xml:space="preserve">
    <value>オフセット</value>
  </data>
  <data name="PointEditor_Points" xml:space="preserve">
    <value>ポイント</value>
  </data>
  <data name="SelectPanel_NotSet" xml:space="preserve">
    <value>未設定</value>
  </data>
  
  
  
  <data name="Settings_DeleteMarkingButton" xml:space="preserve">
    <value>全ての交差点からマークアップを削除</value>
  </data>
  <data name="Settings_DeleteMarkingCaption" xml:space="preserve">
    <value>全てのマークアップを消去</value>
  </data>
  <data name="Settings_DeleteMarkingMessage" xml:space="preserve">
    <value>全てマークアップを削除してもよろしいですか?
この操作は元に戻せません</value>
  </data>
  <data name="Settings_DumpMarkingButton" xml:space="preserve">
    <value>マーキングデータをファイルに保存</value>
  </data>
  <data name="Settings_DumpMarkingButton1" xml:space="preserve">
    <value>クリップボードにコピー</value>
  </data>
  <data name="Settings_DumpMarkingButton2" xml:space="preserve">
    <value>OK</value>
  </data>
  
  <data name="Settings_DumpMarkingMessageFailed" xml:space="preserve">
    <value>ダンプに失敗しました</value>
  </data>
  
  <data name="Settings_General" xml:space="preserve">
    <value>基本設定</value>
  </data>
  
  
  <data name="Settings_ImportMarkingMessage" xml:space="preserve">
    <value>本当にデータをインポートしますか？
インポートされたデータは、既存のマークアップを全て置き換えます。
この操作は、元に戻すことができません。</value>
  </data>
  
  <data name="Settings_ImportMarkingMessageSuccess" xml:space="preserve">
    <value>データのインポートに成功しました。</value>
  </data>
  <data name="Settings_Other" xml:space="preserve">
    <value>その他</value>
  </data>
  
  <data name="Settings_RenderDistance" xml:space="preserve">
    <value>最大描画距離</value>
  </data>
  <data name="Settings_Shortcuts" xml:space="preserve">
    <value>ショートカット</value>
  </data>
  
  <data name="Settings_ShowTooltips" xml:space="preserve">
    <value>ツールチップの表示</value>
  </data>
  <data name="TemplateEditor_Color" xml:space="preserve">
    <value>カラー</value>
  </data>
  <data name="TemplateEditor_DashedLength" xml:space="preserve">
    <value>線の長さ</value>
  </data>
  <data name="TemplateEditor_ItemDescription" xml:space="preserve">
    <value>テンプレート</value>
  </data>
  <data name="TemplateEditor_Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="TemplateEditor_Offset" xml:space="preserve">
    <value>オフセット</value>
  </data>
  <data name="TemplateEditor_SpaceLength" xml:space="preserve">
    <value>空白の長さ</value>
  </data>
  <data name="TemplateEditor_Style" xml:space="preserve">
    <value>線の種類</value>
  </data>
  <data name="TemplateEditor_Templates" xml:space="preserve">
    <value>テンプレート</value>
  </data>
  
  
  
  
  
  
  
  
  
  <data name="Mod_WhatsNewCaption" xml:space="preserve">
    <value>バージョン {0} の新機能</value>
  </data>
  <data name="Settings_ShowWhatsNew" xml:space="preserve">
    <value>新着情報を表示する</value>
  </data>
  
  <data name="Settings_Import" xml:space="preserve">
    <value>インポート</value>
  </data>
  
</root>